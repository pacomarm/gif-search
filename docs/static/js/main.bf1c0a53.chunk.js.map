{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","Card","className","style","width","Img","variant","src","alt","Body","Title","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","gif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,eCJlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OAKI,cAJA,CAICC,EAAA,EAAD,CAAMC,UAAU,QAAQC,MAAO,CAAEC,MAAO,SAAxC,UACI,cAACH,EAAA,EAAKI,IAAN,CAAUH,UAAU,MAAMI,QAAQ,MAAMC,IAAKP,EAAKQ,IAAKT,IACvD,cAACE,EAAA,EAAKQ,KAAN,CAAWP,UAAU,gBAArB,SACI,cAACD,EAAA,EAAKS,MAAN,UAAaX,U,wBCbhBY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETb,EAFS,iDAEuCc,UAAUF,GAFjD,+DAGGG,MAAMf,GAHT,cAGTgB,EAHS,gBAIMA,EAAIC,OAJV,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRvB,MAAOsB,EAAItB,MACXC,IAAKqB,EAAIE,OAAOC,iBAAiBxB,QAT1B,kBAYRmB,GAZQ,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZ3B,mBAAS,CAC/BiC,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPlB,EAAQC,GACHkB,MAAK,SAAAC,GAAI,OACNH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGtB,CAACd,IAEGe,EDfyBK,CAAapB,GAAhCW,EAFsB,EAE5BL,KAAcQ,EAFc,EAEdA,QAErB,OACI,qCACKd,GAAW,qBAAIV,UAAU,mCAAd,cAAmDU,EAASqB,cAA5D,QACVrB,GAAW,oBAAIV,UAAU,mCAAd,uBACb,uBACCwB,GAAW,6CACZ,qBAAKxB,UAAU,YAAf,SAEQqB,EAAOH,KAAI,SAAAc,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIZ,aEdxBa,EAAe,WAAO,IAAD,EAEMlD,mBAAS,CAAC,KAFhB,mBAEvBmD,EAFuB,KAEXpD,EAFW,KAI9B,OACI,qCACI,wDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQoD,EAAWhB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,kBCRjCyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bf1c0a53.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats=> [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        // <div className=\"card animate__animated animate__jello\">\r\n        //     <img src={url} alt={title}/>\r\n        //     <p> {title} </p>\r\n        // </div>\r\n        <Card className=\"cardd\" style={{ width: '13rem' }}>\r\n            <Card.Img className=\"pic\" variant=\"top\" src={url} alt={title} />\r\n            <Card.Body className=\"hidden-mobile\">\r\n                <Card.Title>{title}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=fiUKUtv3J5n96ix8PK4C5Ec55u18ZWjC&limit=10`;\r\n        const res = await fetch(url)\r\n        const {data} = await res.json();\r\n        const gifs = data.map( img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        });\r\n        return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            {category &&<h2 className=\"animate__animated animate__flash\">\"{category.toUpperCase()}\"</h2>}\r\n            {!category &&<h2 className=\"animate__animated animate__flash\">\"RESULTS\"</h2>}\r\n            <hr/>\r\n            {loading && <h4>Loading....</h4>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(gif => (\r\n                        <GifGridItem \r\n                            key={gif.id} \r\n                            {...gif}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs=>\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n            );\r\n    }, [category]);\r\n\r\n    return state\r\n\r\n};\r\n","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return (\r\n        <>\r\n            <h1>Look for a GIF or Meme</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />    \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    ) \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n//Styles babyyyy\nimport './index.css'\nimport 'animate.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}